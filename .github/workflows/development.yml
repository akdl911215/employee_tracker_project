name: Deploy Application

on:
  push:
    branches:
      - master

permissions:
  actions: write
  contents: write
  issues: none
  pull-requests: write
  packages: write

env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/kotlint
  VERSION: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Gradlew Executable
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} .

      - name: Set GHCR_TOKEN based on actor
        run: echo "GHCR_TOKEN=${{ secrets.GHCR_TOKEN }}" >> $GITHUB_ENV

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }} .

      - name: Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy:
    name: Deploy to Test
    runs-on: [label-go]
    needs: build
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}


      - name: Docker run
        run: |
          docker network create connect-net || true
          docker stop kotlin-back || true && docker rm kotlin-back || true
          docker pull ghcr.io/akdl911215/nest:latest
          docker run -itd -p 8080:8080 --network connect-net \
            --name kotlin-back --restart always \
            ghcr.io/akdl911215/nest:latest


